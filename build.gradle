import static org.gradle.internal.os.OperatingSystem.*

plugins {
    id 'maven'
    id 'java'
    id 'application'
    id 'java-library'
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
//    id "com.github.johnrengelman.shadow" version '5.1.0'
    id "org.javamodularity.moduleplugin" version "1.6.0"
}

// jitpack
group = 'com.github.kotlin_graphics'

application {
    mainClassName "main_.TriangleDemo"
//    mainClassName "cmon.TriangleKt"
}

ext {
    moduleName = "${group}.assimp"
    kotlin = 'org.jetbrains.kotlin:kotlin'
    kotlin_version = '1.3.50'
//    kotlintest_version = '3.4.0'
    assimp_version = 'c144a9edcae0772541dd7e6e80247d550fdecb75'
    imgui_version = '5d73b4c37063cccefa4224b3c93cd69b734405ab'
    uno_version = '4c6b2be09fdec57e3695c9cab40d321eedde1712'
    vkk_version = '9fcbd74dffdbada82c12e5cfc20bd749650e39c9'
//    gln_version = '2f36e649bb3037981a625a3a2a1c0316adb05fd6'
    gli_version = '336a02f5acd5db7f5c34cb673512714f1856577e'
    glm_version = '3d3aea6d420bace96ced057cddeca023129d7c41'
    unsigned_version = 'c81c2e39fb9e10403650c1b371b8573fc745bfb4'
    kool_version = '1e564cfb7ab72523d0f748a235e21cf33d0c73bc'
    lwjgl_version = "3.2.3"
    lwjgl_natives = current() == WINDOWS ? "windows" : current() == LINUX ? "linux" : "macos"
}

dependencies {

    implementation "$kotlin-stdlib"
//    implementation "$kotlin-reflect"

    def kx = 'com.github.kotlin-graphics'
//    implementation "$kx:assimp:$assimp_version"
//    ["core", "gl", "vk"].each { implementation "${kx}.imgui:imgui-$it:$imgui_version" }
    ["core", "vk"].each { implementation "${kx}.uno-sdk:uno-$it:$uno_version" }
    implementation "$kx:vkk:$vkk_version"
    implementation "$kx:gli:$gli_version"
    implementation "${kx}.glm:glm:$glm_version"
    implementation "$kx:kotlin-unsigned:$unsigned_version"
    implementation "$kx:kool:$kool_version"

//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.0-RC1"

//    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_version"

    ext.lwjglVersion = "3.2.3"
    ["", "-glfw", "-jemalloc", "-openal", "-opengl", "-stb", "-vulkan", "-shaderc"].each {
        implementation "org.lwjgl:lwjgl$it:$lwjgl_version"
        if(it != "-vulkan")
            implementation "org.lwjgl:lwjgl$it:$lwjgl_version:natives-$lwjgl_natives"
    }

//    ext.spirvCross = "graphics.scenery:spirvcrossj:0.5.0-1.1.85"
//    implementation spirvCross
//    runtime "$spirvCross:natives-$lwjgl_natives"
}

repositories {
    mavenCentral()
    jcenter()
//    maven { setUrl("https://dl.bintray.com/kotlin/kotlin-eap") }
    maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
    maven { setUrl('https://jitpack.io') }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
//    archives javadocJar
}

//sourceSets.main {
//    output.resourcesDir = java.outputDir
//}

compileKotlin {
    // Enable Kotlin compilation to Java 8 class files with method parameter name metadata
    kotlinOptions {
        jvmTarget = "11"
//        javaParameters = true
    }
    // As per https://stackoverflow.com/a/47669720
    // See also https://discuss.kotlinlang.org/t/kotlin-support-for-java-9-module-system/2499/9
    destinationDir = compileJava.destinationDir
}

//compileTestKotlin {
//    kotlinOptions {
//        jvmTarget = "11"
////        javaParameters = true
//    }
//}

compileJava {
    dependsOn(':compileKotlin')
    doFirst {
        options.compilerArgs = ['--module-path', classpath.asPath,]
        classpath = files()
    }
}

